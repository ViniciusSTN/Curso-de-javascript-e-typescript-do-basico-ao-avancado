CRUD

instalar:
validator       // para não precisar usar regex
bcryptjs        // hash de senha - criptografia


sobre session
Sim, para que as flash messages fiquem salvas... Mas session é muito mais do que apenas flash messages... Uma "session" é um modo de armazenamento de dados no lado do servidor que tem uma identificação do navegador do usuário, essa identificação é feita por um cookie.

Vamos quebrar isso em partes para que você entenda a session em si, me parece que é isso que vc não está entendendo...

Session é basicamente uma forma que usamos para salvar dados referentes a um usuário no servidor. Ponto. Nada mais, nada menos... Session === Dados de um usuário. Esses dados podem ser o que vc quiser, por exemplo: flash messages, dados de login, a cor do tema do site, se você já mostrou a promoção do dia para o usuário, enfim, o que quiser.

Nós estamos usando o mongodb (uma base de dados) para salvar essa session. Ou seja, quando precisamos salvar alguma informação, nós precisamos fazer uma chamada externa para essa base de dados. Quando você cria algo na session, isso fica na memória do navegador prontinho para ser usado, porém isso precisa ser gravado na base de dados, isso porque precisamos persistir essa informação, do contrário ela será perdida. É aqui que entra "save", quando você chama "save", você está garantindo que naquele momento, essa session será gravada na base de dados.

Cada session representa um navegador, por isso você consegue trabalhar com mensagens individuais para cada um dos usuários do seu site. Por este motivo, é que conseguiremos usar a session para salvar informações de login do usuário. Por exemplo, se o usuário logar no sistema, nós vamos criar uma session na base de dados informando ao nosso servidor que esse usuário está logado. Até essa session expirar, esse usuário continuará logado no sistema.

Mas como o servidor sabe qual navegador é de qual cliente? Aqui entra os cookies... Quando você cria uma session, estamos criando também um cookie no navegador do usuário que tem um o ID único dessa session (cookie é um dado especial que o navegador envia de volta para o servidor como forma de identificar algo). Toda vez que aquele navegador acessar o nosso sistema, ele vai enviar o cookie com o id da sessão de volta, assim nosso servidor lê esse ID, encontra a session daquele navegador e o casamento está formado.

Em resumo, o navegador nos informa "quem ele é", se existir uma session salva na base de dados com os dados desse navegador, nosso sistema responde de volta com os dados dessa session. No seu caso, são as flash messages, mas poderia ser qualquer outra coisa.
